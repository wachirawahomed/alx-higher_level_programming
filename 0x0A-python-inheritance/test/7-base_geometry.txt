BaseGeometry module
===================

Import module:
==============
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()
	
Test case #0: A test case with good parameters

    >>> bg.integer_validator("width", 59)

Test case #1  Valid non-zero integer values

    >>> bg.integer_validator("positive_int", 999)

Test case #2: Integer value equal to 0

	>>> bg.integer_validator("zero_value", 0)
	Traceback (most recent call last):
	ValueError: zero_value must be greater than 0

Test case #3: Integer value less than 0

	>>> bg.integer_validator("negative_int", -42)
	Traceback (most recent call last):
	ValueError: negative_int must be greater than 0

Test case #4 Large positive integer value

	>>> bg.integer_validator("large_int", 999999999)

Test case #5 Large negative integer value

	>>> bg.integer_validator("large_negative_int", -999999999)
	Traceback (most recent call last):
	ValueError: large_negative_int must be greater than 0


Test case #6 Non-integer values

	>>> bg.integer_validator("not_int", "a_string")
	Traceback (most recent call last):
	TypeError: not_int_ must be an integer

Test case #7 None value

	>>> bg.integer_validator("no_value", None)
	Traceback (most recent call last):
	TypeError: no_value must be an integer


Test case #8 Boolean variable

	>>> bg.integer_validator("bool_val", True)
	Traceback (most recent call last):
	TypeError: bool_val must be an integer
