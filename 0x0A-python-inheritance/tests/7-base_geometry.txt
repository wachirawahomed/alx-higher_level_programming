# Test Cases for 7-base_geometry.py

# Import module
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

# Test Case 0: A test case with good parameters
>>> bg.integer_validator("width", 59)  # No exception should be raised

# Test Case 1: Valid non-zero integer values
>>> bg.integer_validator("positive_int", 999)  # No exception should be raised

# Test Case 2: Integer value equal to 0
>>> try:
...     bg.integer_validator("zero_value", 0)
... except ValueError as e:
...     str(e)
'zero_value must be greater than 0'

# Test Case 3: Integer value less than 0
>>> try:
...     bg.integer_validator("negative_int", -42)
... except ValueError as e:
...     str(e)
'negative_int must be greater than 0'

# Test Case 4: Large positive integer value
>>> bg.integer_validator("large_int", 999999999)  # No exception should be raised

# Test Case 5: Large negative integer value
>>> try:
...     bg.integer_validator("large_negative_int", -999999999)
... except ValueError as e:
...     str(e)
'large_negative_int must be greater than 0'

# Test Case 6: Non-integer values
>>> try:
...     bg.integer_validator("not_int", "a_string")
... except TypeError as e:
...     str(e)
'not_int must be an integer'

# Test Case 7: None value
>>> try:
...     bg.integer_validator("no_value", None)
... except TypeError as e:
...     str(e)
'no_value must be an integer'
