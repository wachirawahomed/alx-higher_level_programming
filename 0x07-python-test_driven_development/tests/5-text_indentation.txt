===============================
4. Text indentation module
===============================

Import module:
==============
>>> text_indentation = __import__('5-text_indentation').text_indentation

#1: A test case with a short text

>>> text_indentation('John Wick')
John Wick

#2: A test case with a short text and a character for 2 new lines

>>> text_indentation('James Bond?')
James Bond?
<BLANKLINE>

#3: A test case with a short text and characters for 6 new lines

>>> text_indentation("Hello world. James Bond?")
Hello world.
<BLANKLINE>
James Bond?
<BLANKLINE>

#4: A test case with a text with a special format

>>> text_indentation("""Bye world. \
... James Bond""")
Bye world.
<BLANKLINE>
James Bond

#5: A test case with only spaces and characters to print newlines

>>> text_indentation("   ?:.   ")
?
<BLANKLINE>
:
<BLANKLINE>
.
<BLANKLINE>

#6: Another test case with only spaces and characters to print newlines

>>> text_indentation("  .??:?.  ")
.
<BLANKLINE>
?
<BLANKLINE>
?
<BLANKLINE>
:
<BLANKLINE>
?
<BLANKLINE>
.
<BLANKLINE>

#7: A test case with an integer parameter

>>> text_indentation(15)
Traceback (most recent call last):
TypeError: text must be a string

#8: A test case with a boolean parameter

>>> text_indentation(True)
Traceback (most recent call last):
TypeError: text must be a string

#9: A test case with a data type parameter

>>> text_indentation(str)
Traceback (most recent call last):
TypeError: text must be a string
